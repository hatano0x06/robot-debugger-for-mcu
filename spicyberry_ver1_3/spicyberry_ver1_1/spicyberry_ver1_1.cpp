/***********************************************************************/
/*                                                                     */
/*  FILE        :spicyberry_cplus_ver1_0.cpp                           */
/*  DATE        :Tue, Sep 27, 2011                                     */
/*  DESCRIPTION :Main Program                                          */
/*  CPU TYPE    :SH7125                                                */
/*                                                                     */
/*  This file is generated by Renesas Project Generator (Ver.4.16).    */
/*                                                                     */
/***********************************************************************/
//動かなかったら、サーボとマイコンの速度が同期してないことを疑う
//main文
                


#include "global.h"
#include "iodefine.h"
#include "servo_class.h"
#include "basic_servo_class.h"

//#include "typedefine.h"
#ifdef __cplusplus
//#include <ios>                        // Remove the comment when you use ios
//_SINT ios_base::Init::init_cnt;       // Remove the comment when you use ios
#endif

void main(void);

#ifdef __cplusplus
extern "C" {
void abort(void);
}
#endif

void main(void);

#ifdef __cplusplus
void abort(void)
{

}
#endif

void main(void){
	char k=K_RR;
	setup();
	
/*	while(1){
		delay_ms(100);

		SCI1_OUT_DATA(PS2_command);
//		SCI2_OUT_DATA('a');
//		SCI2_OUT_DATA(PS2_command);
//		SCI2_OUT_DATA(SCI2_IN_DATA());

	}
*/	
	basic_servo allarm;	

	SCI1_OUT_DATA('a');

	servo arm1(9,100);
//	servo arm2(2,300);
	delay_ms(1000);
//	SCI1_OUT_DATA('a');

//	allarm.home_position();
	allarm.all_servo_on();
	while(1){				
		delay_ms(1000);
		arm1.target_position(2000);
		delay_ms(1000);
		arm1.target_position(10);
	}
	
	if(PC_COMMAND==0){	

		while(1){

			switch(k){
//			switch(PS2_command){
			case K_RR:
//				walk(arm1,arm2);				
				delay_ms(1000);
				arm1.target_position(2000);
				delay_ms(1000);
				arm1.target_position(10);
	
/*				delay_ms(1000);

				arm1.target_position(2000);
				arm2.target_position(2500);
		
				delay_ms(1000);

				arm1.target_position(10);
				arm2.target_position(40);
*/

			break;
			case (K_LU || (K_LU + K_L1) || (K_LU + K_R1)):
	
			break;
			case K_LR:
	
			break;
/*			case (K_LD || (K_LD + K_L1) || (K_LD + K_R1)):
	
			break;*/
			case K_LL:
	
			break;
			case K_RU:
	
			break;
			case K_RD:
	
			break;
			case K_RL:
	
			break;
			case K_L1:
	
			break;
			case K_R1:
	
			break;
/*			case K_L2:
		
			break;*/
			case K_R2:
	
			break;
			case K_ST:
	
			break;
			case K_SEL:
	
			break;
			}
		while(SCI2.SCSSR.BIT.RDRF==0);
		k=SCI2.SCRDR;
	    SCI2.SCSSR.BIT.RDRF=0;

		}
	}else if(PC_COMMAND==1){

		while(1){
			PE.DRL.BIT.B7=1;
			SCI1_OUT_DATA('a');

			if(PC_move_command_flag==1){			
				SCI0_OUT_DATA_ID(pc_command[0]);
				SCI0_OUT_DATA_NORMAL(pc_command[1]);
				if(PC_move_command_number>2){
					SCI0_OUT_DATA_NORMAL(pc_command[2]);
					SCI0_OUT_DATA_NORMAL(pc_command[3]);
				}
				if(PC_move_command_number>4){
					SCI0_OUT_DATA_NORMAL(pc_command[4]);					
				}
				PC_move_command_flag=0;
			}
		}
	}
}